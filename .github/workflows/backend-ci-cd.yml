name: Backend CI/CD

on:
  push:
    branches: [ main ]
    paths:
      - 'BE/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'BE/**'
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    services:
      postgres: # This service will be named 'postgres'
        image: postgres:15
        env:
          POSTGRES_USER: postgres     # User for the DB service
          POSTGRES_PASSWORD: password # Password for the DB service
          POSTGRES_DB: mydb         # Database name in the DB service (your app should connect to this)
        ports:
          - 5432:5432 # Maps container port 5432 to host port 5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10.11'
          cache: 'pip'
          cache-dependency-path: './BE/requirements.txt'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest # pytest is installed but the test step is commented out
          pip install -r BE/requirements.txt

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 BE --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings for complexity/line length
          flake8 BE --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      # --- Test with pytest step is commented out ---
      # - name: Test with pytest
      #   run: |
      #     pytest BE/tests/
      #   env: # Tests might also need the DATABASE_URL and other keys
      #     DATABASE_URL: postgresql://postgres:password@localhost:5432/mydb
      #     GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
      #     OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

      # --- Database migration step is commented out ---
      # - name: Run database migrations
      #   run: |
      #     cd BE
      #     alembic upgrade head
      #   env:
      #     DATABASE_URL: postgresql://postgres:password@localhost:5432/mydb
      #     GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }} # Still needed if Alembic env.py loads full app config
      #     OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }} # Still needed if Alembic env.py loads full app config

      # --- Deployment step (uncomment and configure when ready) ---
      # - name: Deploy to server
      #   uses: some-deploy-action@v1 # Replace with your actual deployment action
      #   with:
      #     source: './BE'
      #     target: 'your-server'